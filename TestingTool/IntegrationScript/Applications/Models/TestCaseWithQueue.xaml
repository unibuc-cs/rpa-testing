<Activity mc:Ignorable="sap sap2010" x:Class="TestCase" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="999.2,3579.2" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/python" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="39">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Python</x:String>
      <x:String>UiPath.Python.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>System.Collections.Specialized</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="66">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="693.6,3414.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="generatedTestDT" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="scg:List(x:Object)" Name="testDataList" />
      <Variable x:TypeArguments="x:String" Name="obtainedResult" />
      <Variable x:TypeArguments="x:String" Name="expectedResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="652,75.2" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Flow used to test the Bank Loan model with queue" />
    <Sequence DisplayName="Given" sap:VirtualizedContainerService.HintSize="652,1927.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="testItemQueue" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <mva:VisualBasicValue x:TypeArguments="x:Object" ExpressionText="&quot;Initializing workflow... Reading configuration file...&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="521.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
          <InArgument x:TypeArguments="s:String[]" x:Key="in_configSheets">[{"Settings", "Constants"}]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_configFile">ConfigurationFile\Config.xlsx</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <ui:InvokeWorkflowFile.WorkflowFileName>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Literal`1_1">Settings\InitAllSettings.xaml</Literal>
          </InArgument>
        </ui:InvokeWorkflowFile.WorkflowFileName>
      </ui:InvokeWorkflowFile>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <mva:VisualBasicValue x:TypeArguments="x:Object" ExpressionText="&quot;Configuration file has been read.&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1">
        <ui:LogMessage.Level>
          <InArgument x:TypeArguments="ui:LogLevel">
            <Literal x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="Literal`1_2" Value="Info" />
          </InArgument>
        </ui:LogMessage.Level>
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <mva:VisualBasicValue x:TypeArguments="x:Object" ExpressionText="&quot;Executing python script to generate test cases...&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <p:PythonScope DisplayName="Python Scope -- Execute python script" sap:VirtualizedContainerService.HintSize="521.6,189.6" sap2010:WorkflowViewState.IdRef="PythonScope_1" Path="[Config(&quot;PyhtonHomePath&quot;).ToString]" TargetPlatform="x64" Version="Python_38" WorkingFolder="[Config(&quot;ScriptWorkingFolder&quot;).ToString]">
        <p:PythonScope.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="PythonEngineSessionProperty" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:RunScript Code="{x:Null}" DisplayName="Run Python Script to generate test data" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="RunScript_1">
                <p:RunScript.ScriptFile>
                  <InArgument x:TypeArguments="x:String">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;ScriptFullPath&quot;).ToString" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                  </InArgument>
                </p:RunScript.ScriptFile>
              </p:RunScript>
            </Sequence>
          </ActivityAction>
        </p:PythonScope.Body>
      </p:PythonScope>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <mva:VisualBasicValue x:TypeArguments="x:Object" ExpressionText="&quot;Python script execution ended.&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_4" />
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <mva:VisualBasicValue x:TypeArguments="x:Object" ExpressionText="&quot;Adding exported test data to Orchestrator queue...&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_5" />
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <uta:AddTestDataQueueItem ContinueOnError="{x:Null}" DisplayName="Add Test Data Queue Item" sap:VirtualizedContainerService.HintSize="521.6,254.4" sap2010:WorkflowViewState.IdRef="AddTestDataQueueItem_1" ShowOutputArgumentCheckBoxes="True">
        <uta:AddTestDataQueueItem.ArgumentsBridgeActivityCollection>
          <scg:List x:TypeArguments="ActivityFunc(x:Object)" Capacity="0" />
        </uta:AddTestDataQueueItem.ArgumentsBridgeActivityCollection>
        <uta:AddTestDataQueueItem.Items>
          <uta:ActivityItemContainer PropertiesSelectedIndex="0">
            <uta:ActivityItemContainer.Activity>
              <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[generatedTestDT]" Delimitator="Comma" DisplayName="Read generated test data" FilePath="[Config(&quot;RobotModelFullPath&quot;).ToString+&quot;\generatedTests.csv&quot;]" sap:VirtualizedContainerService.HintSize="333.6,155.2" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
            </uta:ActivityItemContainer.Activity>
            <uta:ActivityItemContainer.ArgumentsBridgeActivity>
              <ActivityFunc x:TypeArguments="x:Object">
                <uta:ArgumentsBridge Input="{x:Null}" sap2010:WorkflowViewState.IdRef="ArgumentsBridge_2" />
              </ActivityFunc>
            </uta:ActivityItemContainer.ArgumentsBridgeActivity>
          </uta:ActivityItemContainer>
        </uta:AddTestDataQueueItem.Items>
        <uta:AddTestDataQueueItem.QueueName>
          <InArgument x:TypeArguments="x:String">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;OrchestratorQueueName&quot;).ToString" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_6" />
          </InArgument>
        </uta:AddTestDataQueueItem.QueueName>
      </uta:AddTestDataQueueItem>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Test data has been successfully added to Orchestrator queue. Total number of test cases is &quot;+generatedTestDT.Rows.Count.ToString]" />
      <uta:GetTestDataQueueItem DisplayName="Get Test Data Queue Item" sap:VirtualizedContainerService.HintSize="521.6,22.4" sap2010:WorkflowViewState.IdRef="GetTestDataQueueItem_1" Output="[testItemQueue]" QueueName="[Config(&quot;OrchestratorQueueName&quot;).ToString]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="521.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Getting test data from queue...&quot;]" />
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="var temp = in_queueItem[&quot;Read generated test data&quot;] as Object[];&#xA;out_testData = temp.ToList();" DisplayName="Parse Dictionary with test data..." sap:VirtualizedContainerService.HintSize="521.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_queueItem">[testItemQueue]</InArgument>
          <OutArgument x:TypeArguments="scg:List(x:Object)" x:Key="out_testData">[testDataList]</OutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
    </Sequence>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="652,1239.2" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[testDataList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="testCase" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="616.8,1104.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="loan" />
              <Variable x:TypeArguments="x:Int32" Name="term" />
              <Variable x:TypeArguments="x:Boolean" Name="pinShouldBeCorrect" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="var temp = in_testDataItem as Dictionary&lt;string,object&gt;;&#xA;out_loan = string.IsNullOrEmpty(temp[&quot;Create_Loan_Process_1:loan&quot;].ToString()) ? 0 : Convert.ToInt32(temp[&quot;Create_Loan_Process_1:loan&quot;].ToString());&#xA;out_term = string.IsNullOrEmpty(temp[&quot;Create_Loan_Process_1:term&quot;].ToString()) ? 0 : Convert.ToInt32(temp[&quot;Create_Loan_Process_1:term&quot;].ToString());&#xA;out_pinShouldBeCorrect = string.IsNullOrEmpty(temp[&quot;Create_Loan_Process_1:pin_should_be_correct&quot;].ToString()) ? true : Convert.ToBoolean(temp[&quot;Create_Loan_Process_1:pin_should_be_correct&quot;].ToString()); &#xA;out_expectedResult = temp[&quot;Create_Loan_Process_1:obtained_result&quot;].ToString();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="575.2,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
              <ui:InvokeCode.Arguments>
                <OutArgument x:TypeArguments="x:Int32" x:Key="out_loan">[loan]</OutArgument>
                <OutArgument x:TypeArguments="x:Int32" x:Key="out_term">[term]</OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_pinShouldBeCorrect">[pinShouldBeCorrect]</OutArgument>
                <InArgument x:TypeArguments="x:Object" x:Key="in_testDataItem">[testCase]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_expectedResult">[expectedResult]</OutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="575.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Test case extracted from queue.&quot;]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="575.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Testing workflow starting...&quot;]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="575.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Create Loan Process - With Invoked Pin Check_v2.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:Int32" x:Key="loan">
                  <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="loan" />
                </InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="term">
                  <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="term" />
                </InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="pin_should_be_correct">
                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="pinShouldBeCorrect" />
                </InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="obtained_result">
                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="obtainedResult" />
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="575.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Workflow tested.&quot;]" />
            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="575.2,255.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="533.6,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[expectedResult]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[expectedResult.Replace("\"+chr(34),"").Replace(chr(34),"")]</InArgument>
                </Assign.Value>
              </Assign>
              <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="533.6,62.4" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                <uta:VerifyExpressionWithOperator.FirstExpression>
                  <InArgument x:TypeArguments="x:String">[obtainedResult]</InArgument>
                </uta:VerifyExpressionWithOperator.FirstExpression>
                <uta:VerifyExpressionWithOperator.SecondExpression>
                  <InArgument x:TypeArguments="x:String">[expectedResult]</InArgument>
                </uta:VerifyExpressionWithOperator.SecondExpression>
              </uta:VerifyExpressionWithOperator>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>