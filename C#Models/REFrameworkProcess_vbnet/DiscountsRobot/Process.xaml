<Activity mc:Ignorable="sap sap2010" x:Class="ProcessTransaction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_customerDataDT" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <this:ProcessTransaction.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:ProcessTransaction.in_Config>
  <this:ProcessTransaction.in_TransactionItem>
    <InArgument x:TypeArguments="sd:DataRow" />
  </this:ProcessTransaction.in_TransactionItem>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1573,1353</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>ExcelSheetToPDF</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>ExcelSheetToPDF</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="ProcessTransaction" sap:VirtualizedContainerService.HintSize="705,1288" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="emailLanguage" />
      <Variable x:TypeArguments="x:String" Name="customerEmailAddress" />
      <Variable x:TypeArguments="x:String" Name="customerNumber" />
      <Variable x:TypeArguments="sd:DataTable" Name="CustomerDataDT" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Excel_GetCustomerNumber workflow" sap:VirtualizedContainerService.HintSize="663,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Excel\Excel_GetCustomerNumber.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_customerDataDT">[in_customerDataDT]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_customerName">[in_TransactionItem("Customer account number").ToString.Trim]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_customerNumber">[customerNumber]</OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_CustomerMasterData">[CustomerDataDT]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Get email language" sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[emailLanguage]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[CustomerDataDT.Rows(0).Item("Language").ToString.Trim]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="663,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Email language: &quot;+emailLanguage]" />
    <Assign DisplayName="Get customer email address" sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[customerEmailAddress]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[CustomerDataDT.Rows(0).Item("Email address").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[customerEmailAddress.Contains(&quot;@&quot;)]" DisplayName="If there is an email address" sap:VirtualizedContainerService.HintSize="663,341" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Customer email address: &quot;+customerEmailAddress]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw DisplayName="Throw no email found" Exception="[new BusinessRuleException(&quot;There is no email address in the input file for customer &quot;+in_TransactionItem(&quot;Customer&quot;).ToString+&quot;. Email to customer has not been sent.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
        </Sequence>
      </If.Else>
    </If>
    <Switch x:TypeArguments="x:String" DisplayName="Switch language" Expression="[emailLanguage]" sap:VirtualizedContainerService.HintSize="663,315" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <Switch.Default>
        <Throw DisplayName="Throw no language found" Exception="[new BusinessRuleException(&quot;There is no default language in the input file for customer &quot;+in_TransactionItem(&quot;Customer&quot;).ToString+&quot;. Email to customer has not been sent.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </Switch.Default>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" x:Key="German" DisplayName="Invoke Email_SendEmailToCustomer workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Email\Email_SendEmailToCustomer.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailSubject">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailSubjectDE&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailBody">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailBodyDE&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_customerEmail">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="customerEmailAddress" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailFromCredentialTarget">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailAddressFromCredentialsTarget&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_customerName">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Customer account number&quot;).ToString.Trim" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ProductCateg">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Product category&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Discount">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Discount value&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_EndDate">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;End date&quot;).ToString" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" x:Key="English" DisplayName="Invoke Email_SendEmailToCustomer workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Email\Email_SendEmailToCustomer.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailSubject">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailSubjectEN&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailBody">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailBodyEN&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_customerEmail">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="customerEmailAddress" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailFromCredentialTarget">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailAddressFromCredentialsTarget&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_customerName">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Customer account number&quot;).ToString.Trim" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ProductCateg">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Product category&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Discount">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Discount value&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_EndDate">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;End date&quot;).ToString" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" x:Key="French" DisplayName="Invoke Email_SendEmailToCustomer workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Email\Email_SendEmailToCustomer.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailSubject">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailSubjectFR&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailBody">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailBodyFR&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_customerEmail">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="customerEmailAddress" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_emailFromCredentialTarget">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;EmailAddressFromCredentialsTarget&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_customerName">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Customer account number&quot;).ToString.Trim" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ProductCateg">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Product category&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Discount">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Discount value&quot;).ToString" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_EndDate">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;End date&quot;).ToString" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Switch>
  </Sequence>
</Activity>