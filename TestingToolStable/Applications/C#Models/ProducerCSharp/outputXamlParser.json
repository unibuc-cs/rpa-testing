{
  "workflows": [
    {
      "variables": {
        "emails": {
          "Type": "List`1"
        },
        "SendersEmail": {
          "Type": "String"
        },
        "path": {
          "Type": "String",
          "Default": "SavedAttachment\\"
        },
        "filesPath": {
          "Type": "String[]"
        },
        "filesPathLength": {
          "Type": "Int32",
          "Annotation": {
            "min": 0,
            "max": 10
          }
        },
        "extractedText": {
          "Type": "String"
        },
        "arrayText": {
          "Type": "String[]"
        }
      },
      "inputArguments": [],
      "displayName": "Main_1",
      "fullPath": "C:\\Users\\marin\\Documents\\Doctorat\\rpa-testing\\TestingToolStable\\Applications\\C#Models\\ProducerCSharp\\Main.xaml",
      "invokedBy": "",
      "startNode": "Main_1:Get_IMAP_Mail_Messages_--_retrieve_emails_from_inbox_1"
    }
  ],
  "graph": {
    "Main_1:Get_IMAP_Mail_Messages_--_retrieve_emails_from_inbox_1": {
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:For_Each_Email_Retrieved_2"
        }
      ]
    },
    "Main_1:For_Each_Email_Retrieved_2": {
      "expression": "for item in emails",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:For_Each_Email_Retrieved_2"
        },
        {
          "value": "False",
          "destination": "Main_1:Assign_--_get_saved_pdfs_6"
        }
      ]
    },
    "Main_1:Assign_--_get_saved_pdfs_6": {
      "expression": "filesPath = Directory.GetFiles(path,\"*.pdf\")",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Assign_--_get_number_of_files_15"
        }
      ]
    },
    "Main_1:For_Each_PDF_7": {
      "expression": "for item in filesPath",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Assign_--_split_text_and_remove_empty_lines_10"
        },
        {
          "value": "False",
          "destination": "Main_1:Virtual_Flowchart_End_16"
        }
      ]
    },
    "Main_1:Assign_--_split_text_and_remove_empty_lines_10": {
      "expression": "arrayText = extractedText.Split(Environment.NewLine.ToArray(), StringSplitOptions.RemoveEmptyEntries)",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:For_Each_PDF_7"
        }
      ]
    },
    "Main_1:Files_found_in_folder_13": {
      "expression": "filesPathLength>0",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:For_Each_PDF_7"
        },
        {
          "value": "False",
          "destination": "Main_1:Virtual_Flowchart_End_16"
        }
      ]
    },
    "Main_1:Assign_--_get_number_of_files_15": {
      "expression": "filesPathLength = filesPath.Length",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Files_found_in_folder_13"
        }
      ]
    },
    "Main_1:Virtual_Flowchart_End_16": {
      "transitions": []
    }
  },
  "startNode": "Main_1:Get_IMAP_Mail_Messages_--_retrieve_emails_from_inbox_1"
}
