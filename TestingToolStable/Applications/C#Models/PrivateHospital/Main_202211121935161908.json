{
  "workflows": [
    {
      "variables": {
        "rmn": {
          "Type": "String",
          "Default": "RMN"
        },
        "neurosurgeryConsult": {
          "Type": "String",
          "Default": "Neurosurgery consult"
        },
        "kinetotherapy": {
          "Type": "String",
          "Default": "Kinetotherapy"
        },
        "options": {
          "Type": "String[]",
          "Default": "new []{rmn, neurosurgeryConsult, kinetotherapy}"
        },
        "yesOtherSelection": {
          "Type": "String",
          "Default": "1.ToString()"
        },
        "noOtherSelection": {
          "Type": "String",
          "Default": "0.ToString()"
        },
        "yesNo": {
          "Type": "String[]",
          "Default": "new []{yesOtherSelection, noOtherSelection}"
        },
        "prices": {
          "Type": "Dictionary`2",
          "Default": "new Dictionary<String, Int32>{{rmn,1000},{neurosurgeryConsult,500},{kinetotherapy,200}}"
        },
        "discounts": {
          "Type": "Dictionary`2",
          "Default": "new Dictionary<String, Boolean>{{rmn,true},{neurosurgeryConsult,true},{kinetotherapy,false}}"
        },
        "totalCost": {
          "Type": "Int32",
          "Default": "0"
        },
        "in_age": {
          "Type": "Int32",
          "Default": ""
        },
        "in_response": {
          "Type": "String",
          "Default": ""
        },
        "in_addAnotherService": {
          "Type": "Int32",
          "Default": ""
        }
      },
      "inputArguments": [
        "in_age",
        "in_response",
        "in_addAnotherService"
      ],
      "displayName": "Main_1",
      "fullPath": "C:\\Users\\marin\\Documents\\Doctorat\\rpa-testing\\TestingToolStable\\Applications\\C#Models\\PrivateHospital\\Main.xaml",
      "invokedBy": "",
      "startNode": "Main_1:Message_Box_1"
    }
  ],
  "graph": {
    "Main_1:Message_Box_1": {
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Age_>_18_3"
        }
      ]
    },
    "Main_1:Age_>_18_3": {
      "expression": "in_age > 18",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Age_>_65_4"
        },
        {
          "value": "False",
          "destination": "Main_1:Discount?_13"
        }
      ]
    },
    "Main_1:Age_>_65_4": {
      "expression": "in_age > 65",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Discount?_19"
        },
        {
          "value": "False",
          "destination": "Main_1:Assign_12"
        }
      ]
    },
    "Main_1:Add_another_service?_9": {
      "expression": "in_addAnotherService == 1",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Age_>_18_3"
        },
        {
          "value": "False",
          "destination": "Main_1:Virtual_Flowchart_End_20"
        }
      ]
    },
    "Main_1:Assign_12": {
      "expression": "totalCost = totalCost + prices[in_response]",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Add_another_service?_9"
        }
      ]
    },
    "Main_1:Discount?_13": {
      "expression": "discounts[in_response]",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Assign_14"
        },
        {
          "value": "False",
          "destination": "Main_1:Assign_15"
        }
      ]
    },
    "Main_1:Assign_14": {
      "expression": "totalCost = totalCost + (prices[in_response] - prices[in_response]*50/100)",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Add_another_service?_9"
        }
      ]
    },
    "Main_1:Assign_15": {
      "expression": "totalCost = totalCost + prices[in_response]",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Add_another_service?_9"
        }
      ]
    },
    "Main_1:Assign_16": {
      "expression": "totalCost = totalCost + prices[in_response]",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Add_another_service?_9"
        }
      ]
    },
    "Main_1:Assign_17": {
      "expression": "totalCost = totalCost + (prices[in_response] - prices[in_response]*60/100)",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Add_another_service?_9"
        }
      ]
    },
    "Main_1:Discount?_19": {
      "expression": "discounts[in_response]",
      "transitions": [
        {
          "value": "True",
          "destination": "Main_1:Assign_17"
        },
        {
          "value": "False",
          "destination": "Main_1:Assign_16"
        }
      ]
    },
    "Main_1:Virtual_Flowchart_End_20": {
      "transitions": []
    }
  },
  "startNode": "Main_1:Message_Box_1"
}
